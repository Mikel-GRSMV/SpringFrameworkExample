Что такое Java Аннотации?

Java  Аннотации - это специальный тип комментариев в вашем коде с помощью которых можно:
1.Передавать какие-либо инструкции для Java компилятора (пример: аннотация @Override)
2.Передавать какие либо инструкции для анализаторов исходного кода
3.Передавать метаданные, которые могут быть использованы либо вашим Java приложением(с помощью рефлексии), либо другими
приложениями или фреймворками(пример: Spring Framework)
========================================================================================================================
Зачем использовать аннотации?

1.Короче, чем XML конфигурация
2.Удобнее, чем XML конфигурация
3.Код становится более читабельным
========================================================================================================================
Как работает конфигурация с помощью аннотаций?
1.Spring сканирует все наши классы
2.Находит классы со специальными аннотациями и автоматически создает бины из этих классов
========================================================================================================================
теперь нам не надо писать xml файлы и создавтать бины вручную, нам будет достаточно писать аннотацию над каждым классом
и спринг автоматически будет создавать bean из класса.
========================================================================================================================
Аннотация @Component
1.Помечаем ей класс, если хотим, чтобы Spring Framework создал бин из этого класса
2.Именно эту аннотацию Spring Framework ищет, когда сканирует все ваши классы
3.Можно указать id для создаваемого бина, можно не указывать(тогда название будет навзвание_класса_с_маленькой_буквы)
========================================================================================================================
Что рассмотрим в этой программе:
1.Уберем лишний XML (создание бинов)
2.Включим сканирование компонентов в конфигурационном файле Spring
3.Добавим анотацию @Component к нашим Java классам
4.Получим созданный бин из Application Context'а
========================================================================================================================
1. Убираем вручную созданный бин
 <bean id="popMusicBean"
          class="ru.gerasimov.springexample.PopMusic">
    </bean>
2. И добавим
<context:component-scan base-package="ru.gerasimov.springexample"/>

